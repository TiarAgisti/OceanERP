Public Class FrmDestination
    Dim isCreate As Boolean = False
    Dim isUpdate As Boolean = False
    Dim isDelete As Boolean = False
    Sub CheckPermissions()
        Dim roleBFC As ClsPermission = New ClsPermission
        Dim roleModel As RoleDModel = New RoleDModel
        roleModel = roleBFC.RetrieveDetailsByRoleIDMenuID(roleIDUser, Tag)
        If roleModel.IsCreate = True Then isCreate = True
        If roleModel.IsUpdate = True Then isUpdate = True
        If roleModel.IsDelete = True Then isDelete = True
    End Sub
#Region "Declaration Country"
    Dim contryID As Integer = 0
    Dim displayCon As String = ""
    Const statusCountry As String = "C"
    Dim countryName As String = ""
#End Region

#Region "Declaration SeaPort"
    Dim seaPortID As Integer = 0
    Dim displaySea As String = ""
    Const statusSeaPort As String = "S"
    Dim seaportName As String = ""
#End Region

#Region "Function Country"
    Sub ClearTextCountry()
        txtConCode.Text = AutoGenerated
        txtConName.Clear()
        cmbCariCon.Text = ""
        txtCariCon.Clear()
        countryName = ""
    End Sub
    Sub PropertiesGridCountry()
        dgvCon.Columns(0).Visible = False
        dgvCon.Columns(1).HeaderText = "Country Code"
        dgvCon.Columns(1).Width = 100
        dgvCon.Columns(2).HeaderText = "Name"
        dgvCon.Columns(2).Width = 150
        dgvCon.Columns(3).Visible = False
        dgvCon.Columns(4).Visible = False
        dgvCon.Columns(5).Visible = False
        dgvCon.Columns(6).Visible = False
        dgvCon.Columns(7).Visible = False
        dgvCon.Columns(8).Visible = False
    End Sub
    Sub ListCountry(myOptions As String, myParam As String)
        Try
            Dim destBFC As ClsDestination = New ClsDestination
            dgvCon.DataSource = destBFC.RetrieveList(myOptions, myParam, statusCountry)
            dgvCon.ReadOnly = True
            PropertiesGridCountry()
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
    Sub EnabledTextCon(status As Boolean)
        txtConName.Enabled = status
    End Sub
    Sub ButtonAddCon()
        If isCreate = True Then btnAddCon.Enabled = True
        btnSaveCon.Enabled = False
        btnDeleteCon.Enabled = False
        btnCancelCon.Enabled = False
    End Sub
    Sub ButtonSaveCon()
        btnAddCon.Enabled = False
        btnSaveCon.Enabled = True
        btnDeleteCon.Enabled = False
        btnCancelCon.Enabled = True
    End Sub
    Sub ButtonUpdateCon()
        btnAddCon.Enabled = False
        If isUpdate = True Then btnSaveCon.Enabled = True
        If isDelete = True Then btnDeleteCon.Enabled = True
        btnCancelCon.Enabled = True
    End Sub
    Sub PreCreateDisplayCon()
        ClearTextCountry()
        ListCountry(cmbCariCon.Text, txtCariCon.Text)
        EnabledTextCon(False)
        ButtonAddCon()
        displayCon = ""
    End Sub
    Function CheckEmptyCon() As Boolean
        If Trim(txtConName.Text) = String.Empty Then
            MsgBoxWarning("Name can't empty")
            txtConName.Focus()
            Return True
        Else
            Return False
        End If
    End Function
    Function SetConModel() As DestinationModel
        Dim destModel As DestinationModel = New DestinationModel
        Dim destBFC As ClsDestination = New ClsDestination
        Select Case displayCon
            Case "Create"
                destModel.DestinationID = destBFC.GeneratedAutoNumber
                destModel.DestinationCode = destBFC.GeneratedCodeCountry
                destModel.Name = txtConName.Text
                destModel.Status = "C"
                destModel.IsActive = True
                destModel.CreatedBy = userID
                destModel.CreatedDate = DateTime.Now
                destModel.UpdatedBy = userID
                destModel.UpdatedDate = DateTime.Now
            Case "Update"
                destModel.DestinationID = contryID
                destModel.Name = txtConName.Text
                destModel.Status = "C"
                destModel.IsActive = True
                destModel.UpdatedBy = userID
                destModel.UpdatedDate = DateTime.Now
            Case Else
                destModel.DestinationID = contryID
                destModel.IsActive = False
                destModel.UpdatedBy = userID
                destModel.UpdatedDate = DateTime.Now
        End Select
        Return destModel
    End Function
    Sub InsertCountry()
        Dim destBFC As ClsDestination = New ClsDestination
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Create new Country,Country name is " + txtConName.Text
        Try
            If destBFC.GetValidateName(txtConName.Text, statusCountry) = True Then
                If destBFC.InsertDestination(SetConModel, logBFC.SetLogHistory(logDesc)) = True Then
                    MsgBoxSaved()
                    PreCreateDisplayCon()
                End If
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub

    Sub UpdateCountry()
        Dim destBFC As ClsDestination = New ClsDestination
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Update Country for CountryCode = " + txtConCode.Text
        Try
            If txtConName.Text = countryName Then
                If destBFC.UpdateDestination(SetConModel, logBFC.SetLogHistory(logDesc), displayCon) = True Then
                    MsgBoxUpdated()
                    PreCreateDisplayCon()
                End If
            ElseIf txtConName.Text <> countryName Then
                If destBFC.GetValidateName(txtConName.Text, statusCountry) Then
                    If destBFC.UpdateDestination(SetConModel, logBFC.SetLogHistory(logDesc), displayCon) = True Then
                        MsgBoxUpdated()
                        PreCreateDisplayCon()
                    End If
                End If
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub

    Sub DeleteCountry()
        Dim destBFC As ClsDestination = New ClsDestination
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Update Country for CountryCode = " + txtConCode.Text + ",update IsActive = False"
        displayCon = "Delete"
        Try
            If destBFC.UpdateDestination(SetConModel, logBFC.SetLogHistory(logDesc), displayCon) = True Then
                MsgBoxDeleted()
                PreCreateDisplayCon()
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
#End Region

#Region "Function SeaPort"
    Sub ClearTextSeaPort()
        txtSeaCode.Text = AutoGenerated
        txtSeaName.Clear()
        cmbCariSea.Text = ""
        txtCariSea.Clear()
        countryName = ""
    End Sub

    Sub PropertiesGridSeaPort()
        dgvSea.Columns(0).Visible = False
        dgvSea.Columns(1).HeaderText = "SeaPort Code"
        dgvSea.Columns(1).Width = 100
        dgvSea.Columns(2).HeaderText = "Name"
        dgvSea.Columns(2).Width = 150
        dgvSea.Columns(3).Visible = False
        dgvSea.Columns(4).Visible = False
        dgvSea.Columns(5).Visible = False
        dgvSea.Columns(6).Visible = False
        dgvSea.Columns(7).Visible = False
        dgvSea.Columns(8).Visible = False
    End Sub
    Sub ListSeaPort(myOptions As String, myParam As String)
        Try
            Dim destBFC As ClsDestination = New ClsDestination
            dgvSea.DataSource = destBFC.RetrieveList(myOptions, myParam, statusSeaPort)
            dgvSea.ReadOnly = True
            PropertiesGridSeaPort()
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
    Sub EnabledTextSea(status As Boolean)
        txtSeaName.Enabled = status
    End Sub
    Sub ButtonAddSea()
        If isCreate = True Then btnAddSea.Enabled = True
        btnSaveSea.Enabled = False
        btnDeleteSea.Enabled = False
        btnCancelSea.Enabled = False
    End Sub
    Sub ButtonSaveSea()
        btnAddSea.Enabled = False
        btnSaveSea.Enabled = True
        btnDeleteSea.Enabled = False
        btnCancelSea.Enabled = True
    End Sub
    Sub ButtonUpdateSea()
        btnAddSea.Enabled = False
        If isUpdate = True Then btnSaveSea.Enabled = True
        If isDelete = True Then btnDeleteSea.Enabled = True
        btnCancelSea.Enabled = True
    End Sub
    Sub PreCreateDisplaySea()
        ClearTextSeaPort()
        ListSeaPort(cmbCariSea.Text, txtCariSea.Text)
        EnabledTextSea(False)
        ButtonAddSea()
        displaySea = ""
    End Sub
    Function CheckEmptySea() As Boolean
        If Trim(txtSeaName.Text) = String.Empty Then
            MsgBoxWarning("Name can't empty")
            txtSeaName.Focus()
            Return True
        Else
            Return False
        End If
    End Function
    Function SetSeaModel() As DestinationModel
        Dim destModel As DestinationModel = New DestinationModel
        Dim destBFC As ClsDestination = New ClsDestination
        Select Case displaySea
            Case "Create"
                destModel.DestinationID = destBFC.GeneratedAutoNumber
                destModel.DestinationCode = destBFC.GeneratedCodeSeaPort
                destModel.Name = txtSeaName.Text
                destModel.Status = "S"
                destModel.IsActive = True
                destModel.CreatedBy = userID
                destModel.CreatedDate = DateTime.Now
                destModel.UpdatedBy = userID
                destModel.UpdatedDate = DateTime.Now
            Case "Update"
                destModel.DestinationID = seaPortID
                destModel.Name = txtSeaName.Text
                destModel.Status = "S"
                destModel.IsActive = True
                destModel.UpdatedBy = userID
                destModel.UpdatedDate = DateTime.Now
            Case Else
                destModel.DestinationID = seaPortID
                destModel.IsActive = False
                destModel.UpdatedBy = userID
                destModel.UpdatedDate = DateTime.Now
        End Select
        Return destModel
    End Function
    Sub InsertSeaPort()
        Dim destBFC As ClsDestination = New ClsDestination
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Create new SeaPort,SeaPort name is " + txtSeaName.Text
        Try
            If destBFC.GetValidateName(txtSeaName.Text, statusSeaPort) Then
                If destBFC.InsertDestination(SetSeaModel, logBFC.SetLogHistory(logDesc)) = True Then
                    MsgBoxSaved()
                    PreCreateDisplaySea()
                End If
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
    Sub UpdateSeaPort()
        Dim destBFC As ClsDestination = New ClsDestination
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Update SeaPort for SeaPortCode = " + txtSeaCode.Text
        Try
            If txtSeaName.Text = seaportName Then
                If destBFC.UpdateDestination(SetSeaModel, logBFC.SetLogHistory(logDesc), displaySea) = True Then
                    MsgBoxUpdated()
                    PreCreateDisplaySea()
                End If
            ElseIf txtSeaName.Text <> seaportName Then
                If destBFC.GetValidateName(txtSeaName.Text, statusSeaPort) = True Then
                    If destBFC.UpdateDestination(SetSeaModel, logBFC.SetLogHistory(logDesc), displaySea) = True Then
                        MsgBoxUpdated()
                        PreCreateDisplaySea()
                    End If
                End If
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub

    Sub DeleteSeaPort()
        Dim destBFC As ClsDestination = New ClsDestination
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Update SeaPort for SeaPortCode = " + txtSeaCode.Text + ",update IsActive = False"
        displaySea = "Delete"
        Try
            If destBFC.UpdateDestination(SetSeaModel, logBFC.SetLogHistory(logDesc), displaySea) = True Then
                MsgBoxDeleted()
                PreCreateDisplaySea()
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
#End Region

#Region "Button Country"
    Private Sub btnAddCon_Click(sender As Object, e As EventArgs) Handles btnAddCon.Click
        EnabledTextCon(True)
        displayCon = "Create"
        ButtonSaveCon()
        txtConName.Focus()
    End Sub
    Private Sub btnSaveCon_Click(sender As Object, e As EventArgs) Handles btnSaveCon.Click
        If CheckEmptyCon() = False Then
            Try
                Select Case displayCon
                    Case "Create"
                        InsertCountry()
                    Case "Update"
                        UpdateCountry()
                End Select
            Catch ex As Exception
                MsgBoxError(ex.Message)
            End Try
        End If
    End Sub
    Private Sub btnDeleteCon_Click(sender As Object, e As EventArgs) Handles btnDeleteCon.Click
        If MsgBoxQuestion() = DialogResult.Yes Then
            Try
                DeleteCountry()
            Catch ex As Exception
                MsgBoxError(ex.Message)
            End Try
        End If
    End Sub
    Private Sub btnCancelCon_Click(sender As Object, e As EventArgs) Handles btnCancelCon.Click
        PreCreateDisplayCon()
    End Sub
    Private Sub btnExitCon_Click(sender As Object, e As EventArgs) Handles btnExitCon.Click
        Close()
    End Sub
#End Region

#Region "Button SeaPort"
    Private Sub btnAddSea_Click(sender As Object, e As EventArgs) Handles btnAddSea.Click
        EnabledTextSea(True)
        displaySea = "Create"
        ButtonSaveSea()
        txtSeaName.Focus()
    End Sub
    Private Sub btnSaveSea_Click(sender As Object, e As EventArgs) Handles btnSaveSea.Click
        If CheckEmptySea() = False Then
            Try
                Select Case displaySea
                    Case "Create"
                        InsertSeaPort()
                    Case "Update"
                        UpdateSeaPort()
                End Select
            Catch ex As Exception
                MsgBoxError(ex.Message)
            End Try
        End If
    End Sub
    Private Sub btnDeleteSea_Click(sender As Object, e As EventArgs) Handles btnDeleteSea.Click
        If MsgBoxQuestion() = DialogResult.Yes Then
            Try
                DeleteSeaPort()
            Catch ex As Exception
                MsgBoxError(ex.Message)
            End Try
        End If
    End Sub

    Private Sub btnCancelSea_Click(sender As Object, e As EventArgs) Handles btnCancelSea.Click
        PreCreateDisplaySea()
    End Sub
    Private Sub btnExitSea_Click(sender As Object, e As EventArgs) Handles btnExitSea.Click
        Close()
    End Sub
#End Region

#Region "Other Country"
    Private Sub txtConName_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txtConName.KeyPress
        If e.KeyChar = Chr(13) Then
            btnSaveCon.Focus()
        End If
    End Sub
    Private Sub cmbCariCon_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbCariCon.SelectedIndexChanged
        txtCariCon.Focus()
    End Sub
    Private Sub cmbCariCon_KeyPress(sender As Object, e As KeyPressEventArgs) Handles cmbCariCon.KeyPress
        e.KeyChar = Chr(0)
    End Sub
    Private Sub txtCariCon_TextChanged(sender As Object, e As EventArgs) Handles txtCariCon.TextChanged
        ListCountry(cmbCariCon.Text, txtCariCon.Text)
    End Sub
    Private Sub dgvCon_CellClick(sender As Object, e As DataGridViewCellEventArgs) Handles dgvCon.CellClick
        Dim row As Integer = dgvCon.CurrentRow.Index
        If Not IsDBNull(dgvCon.CurrentRow.Cells(0).Value) Then
            contryID = dgvCon.Item(0, row).Value
            txtConCode.Text = dgvCon.Item(1, row).Value
            txtConName.Text = dgvCon.Item(2, row).Value
            countryName = dgvCon.Item(2, row).Value

            displayCon = "Update"

            ButtonUpdateCon()
            EnabledTextCon(True)
        Else
            MsgBoxError("Choise failed")
        End If
    End Sub
#End Region

#Region "Other SeaPort"
    Private Sub txtSeaName_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txtSeaName.KeyPress
        If e.KeyChar = Chr(13) Then
            btnSaveSea.Focus()
        End If
    End Sub
    Private Sub cmbCariSea_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbCariSea.SelectedIndexChanged
        txtCariSea.Focus()
    End Sub
    Private Sub cmbCariSea_KeyPress(sender As Object, e As KeyPressEventArgs) Handles cmbCariSea.KeyPress
        e.KeyChar = Chr(0)
    End Sub
    Private Sub txtCariSea_TextChanged(sender As Object, e As EventArgs) Handles txtCariSea.TextChanged
        ListSeaPort(cmbCariSea.Text, txtCariSea.Text)
    End Sub
    Private Sub dgvSea_CellClick(sender As Object, e As DataGridViewCellEventArgs) Handles dgvSea.CellClick
        Dim row As Integer = dgvSea.CurrentRow.Index
        If Not IsDBNull(dgvCon.CurrentRow.Cells(0).Value) Then
            seaPortID = dgvSea.Item(0, row).Value
            txtSeaCode.Text = dgvSea.Item(1, row).Value
            txtSeaName.Text = dgvSea.Item(2, row).Value
            seaportName = dgvSea.Item(2, row).Value

            displaySea = "Update"

            ButtonUpdateSea()
            EnabledTextSea(True)
        Else
            MsgBoxError("Choise failed")
        End If
    End Sub
#End Region

    Private Sub FrmDestination_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        CheckPermissions()
        PreCreateDisplayCon()
        PreCreateDisplaySea()
        Text = title
    End Sub
End Class