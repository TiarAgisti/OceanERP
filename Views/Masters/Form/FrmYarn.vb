Public Class FrmYarn
#Region "Declaration"
    Dim yarnID As Integer = 0
    Dim display As String = ""
    Dim isCreate As Boolean = False
    Dim isUpdate As Boolean = False
    Dim isDelete As Boolean = False
#End Region

#Region "Function"
    Sub CheckPermissions()
        Dim roleBFC As ClsPermission = New ClsPermission
        Dim roleModel As RoleDModel = New RoleDModel
        roleModel = roleBFC.RetrieveDetailsByRoleIDMenuID(roleIDUser, Tag)
        If roleModel.IsCreate = True Then isCreate = True
        If roleModel.IsUpdate = True Then isUpdate = True
        If roleModel.IsDelete = True Then isDelete = True
    End Sub
    Sub ClearText()
        txtCode.Text = AutoGenerated
        txtName.Clear()
        cmbCari.Text = ""
        txtCari.Clear()
    End Sub
    Sub PropertiesGrid()
        With dgv
            .Columns(0).Visible = False
            .Columns(1).HeaderText = "Yarn Code"
            .Columns(1).Width = 200
            .Columns(2).HeaderText = "Yarn Name"
            .Columns(2).Width = 200
            .Columns(3).Visible = False
            .Columns(4).Visible = False
            .Columns(5).HeaderText = "Supplier"
            .Columns(5).Width = 200
        End With
    End Sub
    Sub ListYarn(myOptions As String, myParam As String)
        Try
            Dim yarnBFC As ClsYarn = New ClsYarn
            dgv.DataSource = yarnBFC.RetrieveList(myOptions, myParam)
            dgv.ReadOnly = True
            PropertiesGrid()
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
    Sub ComboBoxSupplier(cmb As ComboBox)
        Dim vendorBFC As ClsVendor = New ClsVendor
        Dim statusVendor As Char = "S"
        cmb.DataSource = vendorBFC.ListComboBoxVendor(statusVendor)
        cmb.DisplayMember = "VendorName"
        cmb.ValueMember = "VendorID"
    End Sub
    Function CheckEmpty() As Boolean
        If txtName.Text = String.Empty Then
            MsgBoxWarning("Name can't empty")
            txtName.Focus()
            Return True
        Else
            Return False
        End If
    End Function
    Function SetModel() As YarnModel
        Dim yarnModel As YarnModel = New YarnModel
        Dim yarnBFC As ClsYarn = New ClsYarn
        With yarnModel
            Select Case display
                Case "Create"
                    .YarnID = yarnBFC.GeneratedAutoNumber
                    .YarnCode = yarnBFC.GeneratedCode
                    .YarnName = txtName.Text
                    .VendorID = cmbVendor.SelectedValue
                    .IsActive = True
                    .CreatedBy = userID
                    .CreatedDate = DateTime.Now
                    .UpdatedBy = userID
                    .UpdatedDate = DateTime.Now
                Case "Update"
                    .YarnID = yarnID
                    .YarnName = txtName.Text
                    .VendorID = cmbVendor.SelectedValue
                    .IsActive = True
                    .UpdatedBy = userID
                    .UpdatedDate = DateTime.Now
                Case Else
                    .YarnID = yarnID
                    .IsActive = False
                    .UpdatedBy = userID
                    .UpdatedDate = DateTime.Now
            End Select
        End With
        Return yarnModel
    End Function
    Sub EnabledText(status As Boolean)
        txtName.Enabled = status
        cmbVendor.Enabled = status
    End Sub
    Sub ButtonAdd()
        If isCreate = True Then btnAdd.Enabled = True
        btnSave.Enabled = False
        btnDelete.Enabled = False
        btnCancel.Enabled = False
    End Sub
    Sub ButtonSave()
        btnAdd.Enabled = False
        btnSave.Enabled = True
        btnDelete.Enabled = False
        btnCancel.Enabled = True
    End Sub
    Sub ButtonUpdate()
        btnAdd.Enabled = False
        If isUpdate = True Then btnSave.Enabled = True
        If isDelete = True Then btnDelete.Enabled = True
        btnCancel.Enabled = True
    End Sub
    Sub PreCreateDisplay()
        CheckPermissions()
        ClearText()
        ListYarn(cmbCari.Text, txtCari.Text)
        ComboBoxSupplier(cmbVendor)
        EnabledText(False)
        ButtonAdd()
        display = ""
        Text = title
    End Sub
    Sub InsertYarn()
        Dim yarnBFC As ClsYarn = New ClsYarn
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Create new Yarn,Yarn name is " + txtName.Text
        Try
            If yarnBFC.InsertYarn(SetModel, logBFC.SetLogHistory(logDesc)) = True Then
                MsgBoxSaved()
                PreCreateDisplay()
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
    Sub UpdateYarn()
        Dim yarnBFC As ClsYarn = New ClsYarn
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Update Yarn for Code = " + txtCode.Text
        Try
            If yarnBFC.UpdateYarn(SetModel, logBFC.SetLogHistory(logDesc), display) = True Then
                MsgBoxUpdated()
                PreCreateDisplay()
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
    Sub DeleteYarn()
        Dim yarnBFC As ClsYarn = New ClsYarn
        Dim logBFC As ClsLogHistory = New ClsLogHistory
        Dim logDesc As String = "Update Yarn for Code = " + txtCode.Text + ",update IsActive = False"
        display = "Delete"
        Try
            If yarnBFC.UpdateYarn(SetModel, logBFC.SetLogHistory(logDesc), display) = True Then
                MsgBoxDeleted()
                PreCreateDisplay()
            End If
        Catch ex As Exception
            MsgBoxError(ex.Message)
        End Try
    End Sub
#End Region


#Region "Button"
    Private Sub btnAdd_Click(sender As Object, e As EventArgs) Handles btnAdd.Click
        EnabledText(True)
        display = "Create"
        ButtonSave()
        txtName.Focus()
    End Sub

    Private Sub btnSave_Click(sender As Object, e As EventArgs) Handles btnSave.Click
        If CheckEmpty() = False Then
            Try
                Select Case display
                    Case "Create"
                        InsertYarn()
                    Case "Update"
                        UpdateYarn()
                End Select
            Catch ex As Exception
                MsgBoxError(ex.Message)
            End Try
        End If
    End Sub

    Private Sub btnDelete_Click(sender As Object, e As EventArgs) Handles btnDelete.Click
        If MsgBoxQuestion() = DialogResult.Yes Then
            Try
                DeleteYarn()
            Catch ex As Exception
                MsgBoxError(ex.Message)
            End Try
        End If
    End Sub

    Private Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        PreCreateDisplay()
    End Sub

    Private Sub btnExit_Click(sender As Object, e As EventArgs) Handles btnExit.Click
        Close()
    End Sub
#End Region

#Region "Other"
    Private Sub txtName_KeyPress(sender As Object, e As KeyPressEventArgs) Handles txtName.KeyPress
        If e.KeyChar = Chr(13) Then
            cmbVendor.Focus()
        End If
    End Sub

    Private Sub cmbVendor_KeyPress(sender As Object, e As KeyPressEventArgs) Handles cmbVendor.KeyPress
        e.KeyChar = Chr(0)
    End Sub

    Private Sub cmbVendor_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbVendor.SelectedIndexChanged
        btnSave.Focus()
    End Sub

    Private Sub cmbCari_KeyPress(sender As Object, e As KeyPressEventArgs) Handles cmbCari.KeyPress
        e.KeyChar = Chr(0)
    End Sub

    Private Sub cmbCari_SelectedIndexChanged(sender As Object, e As EventArgs) Handles cmbCari.SelectedIndexChanged
        txtCari.Focus()
    End Sub

    Private Sub txtCari_TextChanged(sender As Object, e As EventArgs) Handles txtCari.TextChanged
        ListYarn(cmbCari.Text, txtCari.Text)
    End Sub

    Private Sub dgv_CellClick(sender As Object, e As DataGridViewCellEventArgs) Handles dgv.CellClick
        ComboBoxSupplier(cmbVendor)
        With dgv
            If .RowCount > 1 Then
                Dim row As Integer = .CurrentRow.Index
                yarnID = .Item(0, row).Value
                txtCode.Text = .Item(1, row).Value
                txtName.Text = .Item(2, row).Value
                cmbVendor.SelectedValue = .Item(3, row).Value
                display = "Update"

                ButtonUpdate()
                EnabledText(True)
            End If
        End With
    End Sub

    Private Sub FrmYarn_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        PreCreateDisplay()
    End Sub
#End Region
End Class